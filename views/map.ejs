<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <div id="map" style="width:500px;height:400px;"></div>

  <h1>HTML Geolocation API</h1>
  <button type="button" onclick="search()">검색</button>
  


  <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=<%= KAKAOKEY %>&autoload=true&libraries=services"></script>
  <script>
    // const x = document.querySelector('#demo');
    
    // let x1 = ''
    // let y1 = ''
    // function getLocation() {
    //   if (navigator.geolocation) {
    //     navigator.geolocation.getCurrentPosition(showPosition);
    //   } else {
    //     console.log('');;
    //   }
    // }
    // function showPosition(position) {
    //   x.innerHTML = '위도: ' + position.coords.latitude + '<br>경도: ' + position.coords.longitude;
    //   x1 = position.coords.latitude;
    //   y1 = position.coords.longitude;
    //   console.log(x1);
    //   console.log(y1);
    //   var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
      
    //   var options = { //지도를 생성할 때 필요한 기본 옵션
    //     center: new kakao.maps.LatLng(x1, y1), //지도의 중심좌표.
    //     level: 3, //지도의 레벨(확대, 축소 정도)
    //   };
  
    //   var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴


    //   const places = new kakao.maps.services.Places();

    //   var callback = function(result, status) {
    //       if (status === kakao.maps.services.Status.OK) {
    //           console.log(result);
    //       }
    //   };

    //   places.keywordSearch('박물관', callback);
    // }

    var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
        mapOption = { 
            center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
            level: 10 // 지도의 확대 레벨 
        }; 

    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

    // HTML5의 geolocation으로 사용할 수 있는지 확인합니다 
    if (navigator.geolocation) {
        
        // GeoLocation을 이용해서 접속 위치를 얻어옵니다
        navigator.geolocation.getCurrentPosition(function(position) {
            
            var lat = position.coords.latitude, // 위도
                lon = position.coords.longitude; // 경도
            
            var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
                message = '<div style="padding:5px;">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다
            
            // 마커와 인포윈도우를 표시합니다
            displayMarker(locPosition, message);
                
          });
        
    } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다
        
        var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),    
            message = 'geolocation을 사용할수 없어요..'
            
        displayMarker(locPosition, message);
    }

    // 지도에 마커와 인포윈도우를 표시하는 함수입니다
    function displayMarker(locPosition, view, message) {

        // 마커를 생성합니다
        var marker = new kakao.maps.Marker({  
            map: map, 
            position: locPosition
        }); 

        
        var iwContent = message, // 인포윈도우에 표시할 내용
            iwRemoveable = true;

        // 인포윈도우를 생성합니다
        var infowindow = new kakao.maps.InfoWindow({
            content : iwContent,
            removable : iwRemoveable
        });
        
        // 인포윈도우를 마커위에 표시합니다 
        infowindow.open(map, marker);
        
        // 지도 중심좌표를 접속위치로 변경합니다
        map.setCenter(locPosition);      
    }




    function search() {
      var places = new kakao.maps.services.Places();

      var callback = function(result, status) {
          if (status === kakao.maps.services.Status.OK) {
              console.log(result);
              result.forEach(item => { 
                var itemPositionLat = item.x,
                    itemPositionLon = item.y;
                var itemPosition = new kakao.maps.LatLng(itemPositionLat, itemPositionLon),
                    messageItem = '치킨';
                console.log('되고있다', itemPositionLon);

                displayMarkerSearch(itemPosition, messageItem);
              })
          }
      };

      places.keywordSearch('인천 치킨', callback);

      
      
    }

    function displayMarkerSearch(itemPosition, messageItem) {
      console.log('함수 실행');
      // 마커를 생성합니다
      var marker = new kakao.maps.Marker({  
          map: map, 
          position: itemPosition
      }); 

      var iwContent = messageItem, // 인포윈도우에 표시할 내용
          iwRemoveable = true;

      // 인포윈도우를 생성합니다
      var infowindow = new kakao.maps.InfoWindow({
          content : iwContent,
          removable : iwRemoveable
      });

      // 인포윈도우를 마커위에 표시합니다 
      infowindow.open(map, marker);
    }
    
  </script>
</body>
</html>